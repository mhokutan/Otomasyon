name: yt-auto-story

on:
  workflow_dispatch:
  # Günde 3 kez (UTC 00:00, 08:00, 16:00)
  schedule:
    - cron: "0 */8 * * *"

jobs:
  publish-story:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # concurrency üst seviyede OLMAZ; job seviyesinde olacak:
    concurrency:
      group: yt-auto-${{ github.workflow }}-${{ matrix.lang }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        include:
          - lang: en
            region: US
            title_prefix: "Mystery Story:"
          - lang: tr
            region: TR
            title_prefix: "Gizemli Hikaye:"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install system deps (ffmpeg & fonts)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg fonts-dejavu-core

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Preflight – required secrets/vars present?
        env:
          OPENAI_API_KEY_S: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_KEY_V: ${{ vars.OPENAI_API_KEY }}
          YT_CLIENT_ID_S: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET_S: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN_S: ${{ secrets.YT_REFRESH_TOKEN }}
        run: |
          set -e
          if [ -z "${OPENAI_API_KEY_S}${OPENAI_API_KEY_V}" ]; then
            echo "::error::Missing OPENAI_API_KEY (Secrets or Variables)"
            exit 1
          fi
          for k in YT_CLIENT_ID_S YT_CLIENT_SECRET_S YT_REFRESH_TOKEN_S; do
            if [ -z "${!k}" ]; then
              echo "::error::Missing YouTube secret: ${k%_S}"
              exit 1
            fi
          done
          echo "Credentials OK ✅"

      - name: Run generator (STORY • ${{ matrix.lang }})
        env:
          THEME: "story"
          LANGUAGE: ${{ matrix.lang }}
          REGION: ${{ matrix.region }}
          VIDEO_TITLE_PREFIX: ${{ matrix.title_prefix }}

          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY != '' && secrets.OPENAI_API_KEY || vars.OPENAI_API_KEY }}
          OPENAI_BASE_URL: "https://api.openai.com/v1"
          OPENAI_MODEL_CHAT: "gpt-4o-mini"
          OPENAI_MODEL_TTS:  "gpt-4o-mini-tts"
          OPENAI_MAX_TOKENS: "400"
          OPENAI_TEMPERATURE: "0.7"

          TTS_VOICE: "alloy"
          TTS_ATEMPO: "1.07"
          TTS_BITRATE: "128k"

          BG_IMAGES_PER_SLIDE: "4"
          FPS: "60"
          CRF: "22"
          ALLOW_NET_BG: "1"
          NET_TIMEOUT: "8"
          MAX_BG_SIZE_MB: "6"

          BREAKING_ON: "0"
          BREAKING_TEXT: "BREAKING"
          PRESENTER_URL: ""
          PRESENTER_POS: "top-right"
          PRESENTER_SIZE: "260"
          PRESENTER_INITIALS: "AI"

          HF_TOKEN: ${{ secrets.HF_TOKEN != '' && secrets.HF_TOKEN || vars.HF_TOKEN }}

          YT_CLIENT_ID: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}
          YT_PRIVACY: "public"
          YT_MADE_FOR_KIDS: "false"

          PYTHONIOENCODING: "utf-8"
          LANG: "en_US.UTF-8"
        run: |
          set -euxo pipefail
          mkdir -p out
          timeout 15m python -u src/main.py 2>&1 | tee "out/run_${{ matrix.lang }}.log"

      - name: Show tree & sizes
        if: always()
        run: |
          echo "::group::Workspace tree"
          ls -R
          echo "::endgroup::"
          echo "::group::Out tree"
          ls -lah out || true
          echo "::endgroup::"

      - name: Upload artifact (${{ matrix.lang }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: output-story-${{ matrix.lang }}
          path: out/**
          if-no-files-found: warn
          retention-days: 7
name: yt-auto

on:
  workflow_dispatch:
  # Günde 3 kez (UTC): 06:00, 14:00, 22:00
  schedule:
    - cron: "0 6,14,22 * * *"

concurrency:
  group: yt-auto-stories-2lang
  cancel-in-progress: true

jobs:
  stories-3x-2lang:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        LANG: [tr, en]   # <- aynı anda TR ve EN
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install system deps (ffmpeg & fonts)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg fonts-dejavu-core

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Preflight – required secrets/vars present?
        env:
          OPENAI_API_KEY_S: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_KEY_V: ${{ vars.OPENAI_API_KEY }}
          YT_CLIENT_ID_S: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET_S: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN_S: ${{ secrets.YT_REFRESH_TOKEN }}
        run: |
          set -e
          if [ -z "${OPENAI_API_KEY_S}${OPENAI_API_KEY_V}" ]; then
            echo "::error::Missing OPENAI_API_KEY (Secrets or Variables)"; exit 1
          fi
          for k in YT_CLIENT_ID_S YT_CLIENT_SECRET_S YT_REFRESH_TOKEN_S; do
            if [ -z "${!k}" ]; then
              echo "::error::Missing YouTube secret: ${k%_S}"; exit 1
            fi
          done
          echo "Credentials OK ✅"

      - name: Run generator (STORY • ${{ matrix.LANG }})
        env:
          # --- Content selection ---
          THEME: "story"
          LANGUAGE: ${{ matrix.LANG }}
          REGION: ${{ matrix.LANG == 'tr' && 'TR' || 'US' }}

          # Hikaye türleri; rastgele seçilir
          STORY_GENRES: "tarihsel gizem,esrarengiz olay,çözülmemiş korku,paranormal,şehir efsanesi,urban legend,historical mystery,unsolved horror,paranormal tale"
          STORY_MIN_SEC: "55"
          STORY_MAX_SEC: "75"
          STORY_SEED: ""

          # --- OpenAI (ucuz) ---
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY != '' && secrets.OPENAI_API_KEY || vars.OPENAI_API_KEY }}
          OPENAI_BASE_URL: "https://api.openai.com/v1"
          OPENAI_MODEL_CHAT: "gpt-4o-mini"
          OPENAI_MODEL_TTS:  "gpt-4o-mini-tts"
          OPENAI_MAX_TOKENS: "600"
          OPENAI_TEMPERATURE: "0.9"

          # --- TTS ---
          TTS_VOICE: "alloy"
          TTS_ATEMPO: "1.03"
          TTS_GAP_MS: "120"
          TTS_BITRATE: "128k"

          # --- Görseller / render ---
          BG_IMAGES_PER_SLIDE: "6"
          BG_QUERY_MODE: "unsplash"     # unsplash | picsum
          FPS: "60"
          CRF: "22"

          # Banner & spiker (opsiyonel)
          BREAKING_ON: "0"
          BREAKING_TEXT: "BREAKING"
          PRESENTER_URL: ""
          PRESENTER_POS: "top-right"
          PRESENTER_SIZE: "240"
          PRESENTER_INITIALS: "AI"

          # YouTube + COPPA
          YT_CLIENT_ID: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}
          YT_PRIVACY: "public"
          YT_MADE_FOR_KIDS: "false"

          PYTHONIOENCODING: "utf-8"
        run: |
          set -euxo pipefail
          mkdir -p out
          python src/main.py

      - name: Upload artifact (${{ matrix.LANG }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: output-${{ matrix.LANG }}
          path: out/**
          if-no-files-found: warn
          retention-days: 7

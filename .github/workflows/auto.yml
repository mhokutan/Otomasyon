name: yt-auto

on:
  workflow_dispatch:
  schedule:
    # New York 07:00 (EDT ≈ UTC 11:00)
    - cron: "0 11 * * *"
    # New York 19:00 (EDT ≈ UTC 23:00)
    - cron: "0 23 * * *"

concurrency:
  group: yt-auto
  cancel-in-progress: false

jobs:
  morning-crypto:
    # Sadece 11:00 UTC cron’unda ya da manuel tetikte çalış
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'schedule' && github.event.schedule == '0 11 * * *')
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install system deps (ffmpeg & fonts)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg fonts-dejavu-core

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Preflight – required secrets/vars present?
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || vars.OPENAI_API_KEY }}
          YT_CLIENT_ID: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}
        run: |
          set -e
          [ -n "$OPENAI_API_KEY" ] || { echo "::error::Missing OPENAI_API_KEY"; exit 1; }
          [ -n "$YT_CLIENT_ID" ] || { echo "::error::Missing YT_CLIENT_ID"; exit 1; }
          [ -n "$YT_CLIENT_SECRET" ] || { echo "::error::Missing YT_CLIENT_SECRET"; exit 1; }
          [ -n "$YT_REFRESH_TOKEN" ] || { echo "::error::Missing YT_REFRESH_TOKEN"; exit 1; }
          echo "All required credentials are present ✅"

      - name: Run generator (CRYPTO morning EN)
        env:
          # Theme & content
          THEME: "crypto"
          CRYPTO_COINS: "bitcoin,ethereum,solana"
          VIDEO_TITLE_PREFIX: "Daily Crypto Brief:"
          LANGUAGE: "en"
          REGION: "US"

          # Voice & render
          TTS_VOICE: "alloy"
          TTS_ATEMPO: "1.05"
          TTS_GAP_MS: "10"
          TTS_BITRATE: "128k"
          BG_ZOOM_PER_SEC: "0.0018"
          XFADE_SEC: "1.0"
          TICKER_SPEED: "170"
          TICKER_H: "120"
          FPS: "60"

          # Models (ucuz)
          OPENAI_MODEL_CHAT: "gpt-4o-mini"
          OPENAI_MODEL_TTS:  "gpt-4o-mini-tts"
          OPENAI_MAX_TOKENS: "400"
          OPENAI_TEMPERATURE: "0.7"

          # Optional HF (AI görsel)
          HF_TOKEN: ${{ secrets.HF_TOKEN || vars.HF_TOKEN }}

          # YouTube OAuth
          YT_CLIENT_ID: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}
          YT_PRIVACY: "public"

          # OpenAI
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || vars.OPENAI_API_KEY }}
          OPENAI_BASE_URL: "https://api.openai.com/v1"

          PYTHONIOENCODING: "utf-8"
          LANG: "en_US.UTF-8"
        run: |
          set -euxo pipefail
          mkdir -p out
          python src/main.py

      - name: Upload artifact (morning)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: output-morning
          path: out/**
          if-no-files-found: warn
          retention-days: 7

  evening-sports:
    # Sadece 23:00 UTC cron’unda ya da manuel tetikte çalış
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'schedule' && github.event.schedule == '0 23 * * *')
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install system deps (ffmpeg & fonts)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg fonts-dejavu-core

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Preflight – required secrets/vars present?
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || vars.OPENAI_API_KEY }}
          YT_CLIENT_ID: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}
        run: |
          set -e
          [ -n "$OPENAI_API_KEY" ] || { echo "::error::Missing OPENAI_API_KEY"; exit 1; }
          [ -n "$YT_CLIENT_ID" ] || { echo "::error::Missing YT_CLIENT_ID"; exit 1; }
          [ -n "$YT_CLIENT_SECRET" ] || { echo "::error::Missing YT_CLIENT_SECRET"; exit 1; }
          [ -n "$YT_REFRESH_TOKEN" ] || { echo "::error::Missing YT_REFRESH_TOKEN"; exit 1; }
          echo "All required credentials are present ✅"

      - name: Run generator (SPORTS evening EN)
        env:
          THEME: "news"
          RSS_URL: "https://news.google.com/rss?hl=en-US&gl=US&ceid=US:en&q=sports"
          VIDEO_TITLE_PREFIX: "Sports Brief:"
          LANGUAGE: "en"
          REGION: "US"

          TTS_VOICE: "alloy"
          TTS_ATEMPO: "1.05"
          TTS_GAP_MS: "10"
          TTS_BITRATE: "128k"
          BG_ZOOM_PER_SEC: "0.0018"
          XFADE_SEC: "1.0"
          TICKER_SPEED: "180"
          TICKER_H: "120"
          FPS: "60"

          OPENAI_MODEL_CHAT: "gpt-4o-mini"
          OPENAI_MODEL_TTS:  "gpt-4o-mini-tts"
          OPENAI_MAX_TOKENS: "400"
          OPENAI_TEMPERATURE: "0.7"

          HF_TOKEN: ${{ secrets.HF_TOKEN || vars.HF_TOKEN }}

          YT_CLIENT_ID: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}
          YT_PRIVACY: "public"

          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || vars.OPENAI_API_KEY }}
          OPENAI_BASE_URL: "https://api.openai.com/v1"

          PYTHONIOENCODING: "utf-8"
          LANG: "en_US.UTF-8"
        run: |
          set -euxo pipefail
          mkdir -p out
          python src/main.py

      - name: Upload artifact (evening)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: output-evening
          path: out/**
          if-no-files-found: warn
          retention-days: 7
